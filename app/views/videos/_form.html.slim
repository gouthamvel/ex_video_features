#dropzone.col-ms-6(data-s3_url="#{@s3_direct_post.url}" data-form_data="#{@s3_direct_post.fields.to_json}")
  form#demo-upload.dropzone.dz-clickable
    .dz-default.dz-message
      span
        | Drag & drop files here to upload
= form_for([current_user, Video.new], html: { class: "directUpload form-inline" }) do |f|
  - if @video.errors.any?
    #error_explanation
      h2
        = pluralize(@video.errors.count, "error")
        |  prohibited this video from being saved:
      ul
        - @video.errors.full_messages.each do |message|
          li
            = message
  #partial_input_fields
  #actions.row
    .col-lg-7
      span.btn.btn-success.fileinput-button.dz-clickable
        i.glyphicon.glyphicon-plus
        span
          | Add files...
    .col-lg-5
      span.fileupload-process

      #total-progress.progress.progress-striped.active[role="progressbar" aria-valuemin="0" aria-valuemax="100" aria-valuenow="0" style="opacity: 0;"]
        .progress-bar.progress-bar-success[style="width: 100%;" data-dz-uploadprogress=""]

  #previews.files
    #template.file-row
      div
        span.preview
          img[data-dz-thumbnail]
      div
        span.name[data-dz-name]
        strong.error.text-danger[data-dz-errormessage]
        | (
        span.size[data-dz-size]
        | )
      .form_inputs

      div
        .progress.progress-striped.active[role="progressbar" aria-valuemin="0" aria-valuemax="100" aria-valuenow="0"]
          .progress-bar.progress-bar-success[style="width:0%;" data-dz-uploadprogress]
      div
        button.btn.btn-danger.delete[data-dz-remove]
          i.glyphicon.glyphicon-trash
          span
            | Delete
      hr
  .actions
    = f.submit


javascript:
  $(function() {
    $("#new_video").submit(function(argument) {
      if($("#previews").html() == ''){
        $("<div id='error_explanation'> Please add atleast one video</div>").prependTo("#partial_input_fields")
        return false
      }
    })
  });

  function makeid()
  {
      var text = "";
      var possible = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";

      for( var i=0; i < 5; i++ )
          text += possible.charAt(Math.floor(Math.random() * possible.length));

      return text;
  }
  function setupUpload(i, elem){
    changeFormData = function(data){
      data.key = data.key.replace(/(.*)\$\{filename\}$/, "$1"+ (i+1)+ "-${filename}")
      return data
    }
    var fileInput    = $(elem);
    var form         = $(fileInput.parents('form:first'));
    var form_group   = $(fileInput.parent());
    var submitButton = form.find('input[type="submit"]');
    var progressBar  = $(".progress-bar", $(elem).parent());
    var barContainer = $(".progress", $(elem).parent());
    fileInput.after(barContainer);
    var formData = JSON.parse('#{@s3_direct_post.fields.to_json.html_safe}')
    formData = changeFormData(formData);
    fileInput.fileupload({
      fileInput:       fileInput,
      url:             "#{@s3_direct_post.url}",
      type:            'POST',
      autoUpload:       true,
      formData:         formData,
      paramName:        'file', // S3 does not like nested name fields i.e. name="user[avatar_url]"
      dataType:         'XML',  // S3 returns XML if success_action_status is set to 201
      replaceFileInput: false,
      progressall: function (e, data) {
        var progress = parseInt(data.loaded / data.total * 100, 10);
        progressBar.css('width', progress + '%')
      },
      start: function (e) {
        submitButton.prop('disabled', true);

        progressBar.
          css('width', '0%').
          text("Loading...");
      },
      done: function(e, data) {
        submitButton.prop('disabled', false);
        progressBar.text("Uploading done");

        // extract key and generate URL from response
        var key   = $(data.jqXHR.responseXML).find("Key").text();
        var url   = '//#{@s3_direct_post.url.host}/' + key;

        // create hidden field
        var input = $("<input />", { type:'hidden', name: fileInput.attr('data-name'), value: url })
        form_group.append(input);
      },
      fail: function(e, data) {
        submitButton.prop('disabled', false);

        progressBar.
          css("background", "red").
          text("Failed");
      }
    });
  }
  // function init(){
  //   $('.directUpload').find("input:file").each(function(i, elem) {
  //     setupUpload(i, elem)
  //   });
  // }
  // $(function() {
  //   $("#partial_input_fields").append(JST['videos/form_inputs']())
  //   $("#add-more-videos").click(function(){
  //     $("#partial_input_fields").append(JST['videos/form_inputs']())
  //     init()
  //   })
  //   init();
  // });

